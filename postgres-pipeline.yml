resource_types:
  - name: git-safe
    type: registry-image
    source:
      repository: eminekibar/git-resource-safe
      tag: latest

resources:
  - name: postgres-repo
    type: git-safe
    source:
      uri: https://github.com/eminekibar/DevopsChallenge-postgres
      branch: main

jobs:
- name: deploy-db
  plan:
    - get: postgres-repo
      trigger: true
    - task: kubectl-apply-db
      config:
        platform: linux
        image_resource: { type: registry-image, source: { repository: bitnami/kubectl } }
        inputs: [{ name: postgres-repo }]
        params:
          HOME: /root
          KUBECONFIG_B64: ((kubeconfig_b64))
          POSTGRES_USERNAME: ((postgres-username))
          POSTGRES_PASSWORD: ((postgres-password))
        run:
          path: /bin/sh
          args:
            - -exc
            - |
              mkdir -p "$HOME/.kube"
              echo "$KUBECONFIG_B64" | base64 -d > "$HOME/.kube/config"
              cd postgres-repo
              kubectl apply -f namespace.yml
              # 1) Secret'ı env'den üret → yaml'a çevir → apply et
              kubectl -n devopschallenge create secret generic postgres-secret \
                --from-literal=POSTGRES_USER="${POSTGRES_USERNAME}" \
                --from-literal=POSTGRES_PASSWORD="${POSTGRES_PASSWORD}" \
                --dry-run=client -o yaml | kubectl apply -f -

              kubectl -n devopschallenge apply -f postgres-svc.yml
              kubectl -n devopschallenge apply -f postgres-sts.yml
              kubectl -n devopschallenge wait --for=condition=Ready pod -l app=postgres --timeout=180s